{"ast":null,"code":"var _jsxFileName = \"D:\\\\SmartTest\\\\FrontSmart\\\\smartgrid-test\\\\src\\\\contexts\\\\PersonContext.jsx\";\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { PersonService } from \"../services/PersonService\";\nexport const PersonContext = createContext();\n\nconst PersonContextProvider = props => {\n  const personService = new PersonService();\n  const [persons, setPersons] = useState([]);\n  const [editPerson, setEditPerson] = useState(null);\n  useEffect(() => {\n    personService.getPersons().then(data => setPersons(data.data));\n  }, [personService, persons]);\n\n  const createPerson = person => {\n    personService.createPerson(person).then(data => setPersons([...persons, data.data]));\n  };\n\n  const deletePerson = personid => {\n    personService.deletePerson(personid).then(data => setPersons(persons.filter(p => p.id !== personid)));\n  };\n\n  const updatePerson = person => {\n    personService.updatePerson(person).then(data => setPersons(persons.map(p => p.id === person.id ? data.data : person)));\n    setEditPerson(null);\n  };\n\n  return /*#__PURE__*/React.createElement(PersonContext.Provider, {\n    value: {\n      createPerson,\n      deletePerson,\n      updatePerson,\n      persons\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default PersonContextProvider;","map":{"version":3,"sources":["D:/SmartTest/FrontSmart/smartgrid-test/src/contexts/PersonContext.jsx"],"names":["React","createContext","useState","useEffect","PersonService","PersonContext","PersonContextProvider","props","personService","persons","setPersons","editPerson","setEditPerson","getPersons","then","data","createPerson","person","deletePerson","personid","filter","p","id","updatePerson","map","children"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,QAA9B,EAAwCC,SAAxC,QAAwD,OAAxD;AACA,SAAQC,aAAR,QAA4B,2BAA5B;AAEA,OAAO,MAAMC,aAAa,GAAGJ,aAAa,EAAnC;;AAEP,MAAMK,qBAAqB,GAAIC,KAAD,IAAW;AAErC,QAAMC,aAAa,GAAG,IAAIJ,aAAJ,EAAtB;AAEA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,IAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,aAAa,CAACK,UAAd,GAA2BC,IAA3B,CAAgCC,IAAI,IAAIL,UAAU,CAACK,IAAI,CAACA,IAAN,CAAlD;AACH,GAFQ,EAEP,CAACP,aAAD,EAAgBC,OAAhB,CAFO,CAAT;;AAIA,QAAMO,YAAY,GAAIC,MAAD,IAAY;AAC7BT,IAAAA,aAAa,CAACQ,YAAd,CAA2BC,MAA3B,EAAmCH,IAAnC,CAAyCC,IAAD,IAAUL,UAAU,CAAC,CAAC,GAAGD,OAAJ,EAAYM,IAAI,CAACA,IAAjB,CAAD,CAA5D;AACH,GAFD;;AAIA,QAAMG,YAAY,GAAIC,QAAD,IAAc;AAC/BX,IAAAA,aAAa,CAACU,YAAd,CAA2BC,QAA3B,EAAqCL,IAArC,CAA2CC,IAAD,IAAUL,UAAU,CAACD,OAAO,CAACW,MAAR,CAAgBC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASH,QAA/B,CAAD,CAA9D;AACH,GAFD;;AAIA,QAAMI,YAAY,GAAIN,MAAD,IAAY;AAC7BT,IAAAA,aAAa,CAACe,YAAd,CAA2BN,MAA3B,EAAmCH,IAAnC,CAAyCC,IAAD,IAAUL,UAAU,CAACD,OAAO,CAACe,GAAR,CAAYH,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASL,MAAM,CAACK,EAAhB,GAAqBP,IAAI,CAACA,IAA1B,GAAiCE,MAAlD,CAAD,CAA5D;AACAL,IAAAA,aAAa,CAAC,IAAD,CAAb;AACH,GAHD;;AAKA,sBACI,oBAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLI,MAAAA,YADK;AAELE,MAAAA,YAFK;AAGLK,MAAAA,YAHK;AAILd,MAAAA;AAJK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGF,KAAK,CAACkB,QART,CADJ;AAYH,CApCD;;AAsCA,eAAenB,qBAAf","sourcesContent":["import React, {createContext, useState, useEffect} from \"react\";\r\nimport {PersonService} from \"../services/PersonService\";\r\n\r\nexport const PersonContext = createContext();\r\n\r\nconst PersonContextProvider = (props) => {\r\n\r\n    const personService = new PersonService();\r\n\r\n    const [persons, setPersons] = useState([]);\r\n    const [editPerson, setEditPerson] = useState(null);\r\n\r\n    useEffect(() => {\r\n        personService.getPersons().then(data => setPersons(data.data))\r\n    },[personService, persons]);\r\n\r\n    const createPerson = (person) => {\r\n        personService.createPerson(person).then((data) => setPersons([...persons,data.data]));\r\n    };\r\n\r\n    const deletePerson = (personid) => {\r\n        personService.deletePerson(personid).then((data) => setPersons(persons.filter((p) => p.id !== personid)));\r\n    };\r\n\r\n    const updatePerson = (person) => {\r\n        personService.updatePerson(person).then((data) => setPersons(persons.map(p => p.id === person.id ? data.data : person)));\r\n        setEditPerson(null);\r\n    };\r\n    \r\n    return (\r\n        <PersonContext.Provider\r\n          value={{\r\n            createPerson,\r\n            deletePerson,\r\n            updatePerson,\r\n            persons,\r\n          }}\r\n        >\r\n          {props.children}\r\n        </PersonContext.Provider>\r\n      );\r\n}\r\n\r\nexport default PersonContextProvider;"]},"metadata":{},"sourceType":"module"}
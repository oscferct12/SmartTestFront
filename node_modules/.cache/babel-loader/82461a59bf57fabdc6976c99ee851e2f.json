{"ast":null,"code":"var _jsxFileName = \"D:\\\\SmartTest\\\\FrontSmart\\\\smartgrid-test\\\\src\\\\components\\\\PersonList.jsx\";\nimport React, { useContext, useState, useEffect, useMemo } from 'react';\nimport { Panel } from 'primereact/panel';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Button } from 'primereact/button';\nimport { PersonContext } from \"../contexts/PersonContext\";\nimport PersonForm from './PersonForm';\n\nconst PersonList = () => {\n  const {\n    persons,\n    findPerson,\n    personTypes\n  } = useContext(PersonContext);\n  const [isVisible, setIsVisible] = useState(false);\n\n  const savePerson = id => {\n    findPerson(id);\n    setIsVisible(true);\n  };\n\n  const footer = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-clearfix\",\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      float: \"left\"\n    },\n    icon: \"pi pi-plus\",\n    label: \"Add New Person\",\n    onClick: () => setIsVisible(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }));\n  const personstable = useMemo(() => {\n    let personarray = [];\n\n    if (personTypes && persons) {\n      personarray = persons.map(item => {\n        console.log('-------------------------');\n        console.log(personTypes);\n        console.log('-------------------------');\n        return { ...item,\n          personTypeId: personTypes.find(x => x.id === item.personTypeId).description\n        };\n      });\n    }\n\n    return personarray;\n  }, [persons, personTypes]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Panel, {\n    header: \"Person List\",\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, !personstable ? /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 31\n    }\n  }, \"Loading...\") : /*#__PURE__*/React.createElement(DataTable, {\n    value: personstable,\n    selectionMode: \"single\",\n    onSelectionChange: e => savePerson(e.value.id),\n    footer: footer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Column, {\n    field: \"id\",\n    header: \"Id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    field: \"name\",\n    header: \"Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    field: \"age\",\n    header: \"Age\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    field: \"personTypeId\",\n    header: \"Person Type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(PersonForm, {\n    isVisible: isVisible,\n    setIsVisible: setIsVisible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default PersonList;","map":{"version":3,"sources":["D:/SmartTest/FrontSmart/smartgrid-test/src/components/PersonList.jsx"],"names":["React","useContext","useState","useEffect","useMemo","Panel","DataTable","Column","Button","PersonContext","PersonForm","PersonList","persons","findPerson","personTypes","isVisible","setIsVisible","savePerson","id","footer","width","float","personstable","personarray","map","item","console","log","personTypeId","find","x","description","textAlign","e","value"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect, useMemo } from 'react';\r\nimport { Panel } from 'primereact/panel';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { Button } from 'primereact/button';\r\nimport { PersonContext } from \"../contexts/PersonContext\";\r\nimport PersonForm from './PersonForm';\r\n\r\n\r\nconst PersonList = () => {\r\n\r\n    const { persons, findPerson, personTypes } = useContext(PersonContext);\r\n    const [isVisible, setIsVisible] = useState(false);\r\n\r\n    const savePerson = (id) => {\r\n        findPerson(id);\r\n        setIsVisible(true);\r\n    };\r\n\r\n    const footer = (\r\n        <div className=\"p-clearfix\" style={{ width: \"100%\" }}>\r\n            <Button style={{ float: \"left\" }}\r\n                icon=\"pi pi-plus\"\r\n                label=\"Add New Person\"\r\n                onClick={() => setIsVisible(true)}\r\n            ></Button>\r\n        </div>\r\n    );\r\n   \r\n    const personstable = useMemo(() => {\r\n        let personarray = []\r\n\r\n       if(personTypes && persons)\r\n       {\r\n            personarray = persons.map(item => {\r\n                console.log('-------------------------')\r\n                console.log(personTypes)\r\n                console.log('-------------------------')\r\n                return ({\r\n                    ...item,\r\n                    personTypeId: personTypes.find(x => x.id === item.personTypeId).description\r\n                }\r\n                )\r\n            });\r\n        }\r\n        return personarray;\r\n    }, [persons, personTypes]);\r\n\r\n    return (\r\n        <div>\r\n            <Panel header=\"Person List\" style={{ textAlign: \"center\" }}>\r\n            { !personstable ? <h2>Loading...</h2>\r\n            :(\r\n                <DataTable\r\n                    value={personstable}\r\n                    selectionMode=\"single\"\r\n                    onSelectionChange={(e) => savePerson(e.value.id)}\r\n                    footer={footer}>\r\n\r\n                    <Column field=\"id\" header=\"Id\"></Column>\r\n                    <Column field=\"name\" header=\"Name\"></Column>\r\n                    <Column field=\"age\" header=\"Age\"></Column>\r\n                    <Column field={\"personTypeId\"} header=\"Person Type\"></Column>\r\n                </DataTable>\r\n            )\r\n            }\r\n            </Panel>\r\n            <PersonForm isVisible={isVisible} setIsVisible={setIsVisible}></PersonForm>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PersonList;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\SmartTest\\\\FrontSmart\\\\smartgrid-test\\\\src\\\\components\\\\PersonForm.jsx\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport { PersonContext } from '../contexts/PersonContext';\nimport { Dialog } from \"primereact/dialog\";\nimport { Button } from \"primereact/button\";\nimport { InputText } from \"primereact/inputtext\";\nimport { InputNumber } from \"primereact/inputnumber\";\n\nconst PersonForm = props => {\n  const {\n    isVisible,\n    setIsVisible\n  } = props;\n  const {\n    createPerson,\n    deletePerson,\n    updatePerson\n  } = useContext(PersonContext);\n  const initialPersonState = {\n    id: null,\n    name: \"\",\n    age: 0,\n    personTypeId: 0\n  };\n  const [personData, setPersonData] = useState(initialPersonState);\n  useEffect(() => {\n    if (editPerson) setPersonData(editPerson);\n  }, [editPerson]);\n\n  const updateField = (data, field) => {\n    setPersonData({ ...personData,\n      [field]: data\n    });\n    console.log(personData);\n  };\n\n  const _deletePerson = () => {\n    if (updatePerson) {\n      deletePerson(personData.id);\n      setPersonData(initialPersonState);\n    }\n\n    setIsVisible(false);\n  };\n\n  const savePerson = () => {\n    if (!updatePerson) {\n      createPerson(personData);\n    } else {\n      updatePerson(personData);\n    }\n\n    setPersonData(initialPersonState);\n    setIsVisible(false);\n  };\n\n  const dialogFooter = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui-dialog-buttonpane p-clearfix\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    label: \"Delete\",\n    icon: \"pi pi-times\",\n    onClick: _deletePerson,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    label: \"Save\",\n    icon: \"pi pi-check\",\n    onClick: savePerson,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }));\n\n  const clearSelected = () => {\n    setIsVisible(false);\n    setPersonData(initialPersonState);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    visible: isVisible,\n    modal: true,\n    style: {\n      width: \"420px\"\n    },\n    contentStyle: {\n      overflow: \"visible\"\n    },\n    header: \"Person Details\",\n    onHide: () => clearSelected(),\n    footer: dialogFooter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-grid p-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-float-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputText, {\n    value: personData.name,\n    onChange: e => updateField(e.target.value.trim(), \"name\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, \"Name:\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-float-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputNumber, {\n    value: personData.age,\n    onChange: e => updateField(e.target.value, \"age\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, \"Age:\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-float-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputNumber, {\n    value: personData.personTypeId,\n    onChange: e => updateField(e.target.value, \"personTypeId\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, \"Person Type:\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }))));\n};\n\nexport default PersonForm;","map":{"version":3,"sources":["D:/SmartTest/FrontSmart/smartgrid-test/src/components/PersonForm.jsx"],"names":["React","useContext","useState","useEffect","PersonContext","Dialog","Button","InputText","InputNumber","PersonForm","props","isVisible","setIsVisible","createPerson","deletePerson","updatePerson","initialPersonState","id","name","age","personTypeId","personData","setPersonData","editPerson","updateField","data","field","console","log","_deletePerson","savePerson","dialogFooter","clearSelected","width","overflow","e","target","value","trim"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\r\nimport { PersonContext } from '../contexts/PersonContext';\r\nimport { Dialog } from \"primereact/dialog\";\r\nimport { Button } from \"primereact/button\";\r\nimport { InputText } from \"primereact/inputtext\";\r\nimport { InputNumber } from \"primereact/inputnumber\";\r\n\r\nconst PersonForm = (props) => {\r\n\r\n    const { isVisible, setIsVisible } = props;\r\n\r\n    const {\r\n        createPerson,\r\n        deletePerson,\r\n        updatePerson\r\n    } = useContext(PersonContext)\r\n\r\n    const initialPersonState = {\r\n        id: null,\r\n        name: \"\",\r\n        age: 0,\r\n        personTypeId: 0\r\n    };\r\n\r\n    const [personData, setPersonData] = useState(initialPersonState);\r\n\r\n    useEffect(() => {\r\n        if (editPerson) setPersonData(editPerson);\r\n      }, [editPerson]);\r\n\r\n    const updateField = (data, field) => {\r\n        setPersonData({\r\n          ...personData,\r\n          [field]: data,\r\n        });\r\n    \r\n        console.log(personData);\r\n      };\r\n\r\n    const _deletePerson = () => {\r\n        if (updatePerson) {\r\n        deletePerson(personData.id);\r\n        setPersonData(initialPersonState);\r\n        }\r\n        setIsVisible(false);\r\n      };\r\n\r\n    const savePerson = () => {\r\n        if (!updatePerson) {\r\n          createPerson(personData);\r\n        } else {\r\n          updatePerson(personData);\r\n        }\r\n        setPersonData(initialPersonState);\r\n        setIsVisible(false);\r\n      };\r\n\r\n    const dialogFooter = (\r\n        <div className=\"ui-dialog-buttonpane p-clearfix\">\r\n          <Button label=\"Delete\" icon=\"pi pi-times\" onClick={_deletePerson} />\r\n          <Button label=\"Save\" icon=\"pi pi-check\" onClick={savePerson} />\r\n        </div>\r\n      );\r\n\r\n    const clearSelected = () => {\r\n        setIsVisible(false);\r\n        setPersonData(initialPersonState);\r\n      };\r\n\r\n    return (<div>\r\n        <Dialog\r\n            visible={isVisible}\r\n            modal={true}\r\n            style={{ width: \"420px\" }}\r\n            contentStyle={{ overflow: \"visible\" }}\r\n            header=\"Person Details\"\r\n            onHide={() => clearSelected()}\r\n            footer={dialogFooter}\r\n        >\r\n            <div className=\"p-grid p-fluid\">\r\n                <br />\r\n                <div className=\"p-float-label\">\r\n                    <InputText\r\n                        value={personData.name}\r\n                        onChange={(e) => updateField(e.target.value.trim(), \"name\")}\r\n                    />\r\n                    <label>Name:</label>\r\n                </div>\r\n                <br />\r\n                <div className=\"p-float-label\">\r\n                    <InputNumber\r\n                        value={personData.age}\r\n                        onChange={(e) => updateField(e.target.value, \"age\")}\r\n                    />\r\n                    <label>Age:</label>\r\n                </div>\r\n                <br />\r\n                <div className=\"p-float-label\">\r\n                    <InputNumber\r\n                        value={personData.personTypeId}\r\n                        onChange={(e) => updateField(e.target.value, \"personTypeId\")}\r\n                    />\r\n                    <label>Person Type:</label>\r\n                </div>\r\n                <br />\r\n            </div>\r\n        </Dialog>\r\n\r\n    </div>);\r\n}\r\n\r\nexport default PersonForm;"]},"metadata":{},"sourceType":"module"}
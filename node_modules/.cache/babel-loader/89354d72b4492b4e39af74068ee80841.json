{"ast":null,"code":"var _jsxFileName = \"D:\\\\SmartTest\\\\FrontSmart\\\\smartgrid-test\\\\src\\\\components\\\\PersonList.jsx\";\nimport React, { useContext, useState, useEffect, useMemo } from 'react';\nimport { Panel } from 'primereact/panel';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Button } from 'primereact/button';\nimport { PersonContext } from \"../contexts/PersonContext\";\nimport PersonForm from './PersonForm';\nimport PersonDetail from './PersonDetail';\n\nconst PersonList = () => {\n  const {\n    persons,\n    findPerson,\n    personTypes,\n    deletePerson,\n    editPerson\n  } = useContext(PersonContext);\n  const [isVisible, setIsVisible] = useState(false);\n\n  const savePerson = id => {\n    findPerson(id);\n    setIsVisible(true);\n  };\n\n  const _deletePerson = id => {\n    debugger;\n\n    if (editPerson) {\n      deletePerson(id);\n    }\n\n    setIsVisible(false);\n  };\n\n  const footer = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-clearfix\",\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      float: \"left\"\n    },\n    icon: \"pi pi-plus\",\n    label: \"Add New Person\",\n    onClick: () => setIsVisible(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }));\n\n  const actionsTemplate = rowdata => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n      icon: \"pi pi-pencil\",\n      className: \"p-button-rounded p-button-primary p-mr-2\",\n      onClick: e => savePerson(rowdata.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      icon: \"pi pi-trash\",\n      className: \"p-button-rounded p-button-danger\",\n      onClick: e => _deletePerson(rowdata.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }));\n  };\n\n  const personstable = useMemo(() => {\n    let personarray = [];\n\n    if (personTypes && personTypes.length > 0 && persons) {\n      personarray = persons.map(item => {\n        return { ...item,\n          personTypeId: personTypes.find(x => x.id === item.personTypeId).description\n        };\n      });\n    }\n\n    return personarray;\n  }, [persons, personTypes]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Panel, {\n    header: \"Person List\",\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, !personstable ? /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 34\n    }\n  }, \"Loading...\") : /*#__PURE__*/React.createElement(DataTable, {\n    value: personstable,\n    selectionMode: \"single\",\n    onSelectionChange: e => savePerson(e.value.id),\n    footer: footer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Column, {\n    field: \"id\",\n    header: \"Id\",\n    sortable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    field: \"name\",\n    header: \"Name\",\n    sortable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    field: \"age\",\n    header: \"Age\",\n    sortable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    field: \"personTypeId\",\n    header: \"Person Type\",\n    sortable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    body: actionsTemplate,\n    header: \"Actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(PersonForm, {\n    isVisible: isVisible,\n    setIsVisible: setIsVisible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default PersonList;","map":{"version":3,"sources":["D:/SmartTest/FrontSmart/smartgrid-test/src/components/PersonList.jsx"],"names":["React","useContext","useState","useEffect","useMemo","Panel","DataTable","Column","Button","PersonContext","PersonForm","PersonDetail","PersonList","persons","findPerson","personTypes","deletePerson","editPerson","isVisible","setIsVisible","savePerson","id","_deletePerson","footer","width","float","actionsTemplate","rowdata","e","personstable","personarray","length","map","item","personTypeId","find","x","description","textAlign","value"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect, useMemo } from 'react';\r\nimport { Panel } from 'primereact/panel';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { Button } from 'primereact/button';\r\nimport { PersonContext } from \"../contexts/PersonContext\";\r\nimport PersonForm from './PersonForm';\r\nimport PersonDetail from './PersonDetail';\r\n\r\n\r\n\r\nconst PersonList = () => {\r\n\r\n    const { persons, findPerson, personTypes, deletePerson, editPerson } = useContext(PersonContext);\r\n    const [isVisible, setIsVisible] = useState(false);\r\n\r\n    const savePerson = (id) => {\r\n        findPerson(id);\r\n        setIsVisible(true);\r\n    };\r\n\r\n    const _deletePerson = (id) => {\r\n        debugger\r\n        if (editPerson) {\r\n            deletePerson(id);\r\n        }\r\n        setIsVisible(false);\r\n    };\r\n\r\n    const footer = (\r\n        <div className=\"p-clearfix\" style={{ width: \"100%\" }}>\r\n            <Button style={{ float: \"left\" }}\r\n                icon=\"pi pi-plus\"\r\n                label=\"Add New Person\"\r\n                onClick={() => setIsVisible(true)}\r\n            ></Button>\r\n        </div>\r\n    );\r\n\r\n\r\n\r\n\r\n    const actionsTemplate = (rowdata) => {\r\n        return (\r\n            <>\r\n                <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-primary p-mr-2\" onClick={(e) => savePerson(rowdata.id)} />\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger\" onClick={(e) => _deletePerson(rowdata.id)} />\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n    const personstable = useMemo(() => {\r\n        let personarray = []\r\n        if (personTypes && personTypes.length > 0 && persons) {\r\n            personarray = persons.map(item => {\r\n                return ({\r\n                    ...item,\r\n                    personTypeId: personTypes.find(x => x.id === item.personTypeId).description\r\n                }\r\n                )\r\n            });\r\n        }\r\n        return personarray;\r\n    }, [persons, personTypes]);\r\n    return (\r\n\r\n        <div>\r\n            <Panel header=\"Person List\" style={{ textAlign: \"center\" }}>\r\n                {!personstable ? <h2>Loading...</h2>\r\n                    : (\r\n                        <DataTable\r\n                            value={personstable}\r\n                            selectionMode=\"single\"\r\n                            onSelectionChange={(e) => savePerson(e.value.id)}\r\n                            footer={footer}>\r\n\r\n                            <Column field=\"id\" header=\"Id\" sortable></Column>\r\n                            <Column field=\"name\" header=\"Name\" sortable></Column>\r\n                            <Column field=\"age\" header=\"Age\" sortable></Column>\r\n                            <Column field={\"personTypeId\"} header=\"Person Type\" sortable></Column>\r\n                            <Column body={actionsTemplate} header=\"Actions\" />\r\n                        </DataTable>\r\n                    )\r\n                }\r\n            </Panel>\r\n            <PersonForm isVisible={isVisible} setIsVisible={setIsVisible}></PersonForm>\r\n            {/* <PersonDetail isVisible={isVisible} setIsVisible={setIsVisible}></PersonDetail> */}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default PersonList;"]},"metadata":{},"sourceType":"module"}
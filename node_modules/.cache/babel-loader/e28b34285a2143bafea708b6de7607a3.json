{"ast":null,"code":"var _jsxFileName = \"D:\\\\SmartTest\\\\FrontSmart\\\\smartgrid-test\\\\src\\\\components\\\\PersonDetail.jsx\";\nimport React from 'react';\nimport { Dialog } from \"primereact/dialog\";\nimport { Chart } from 'primereact/chart';\n\nconst PersonDetail = props => {\n  const {\n    isVisibleDetails,\n    setIsVisibleDetails,\n    selectedPerson\n  } = props;\n\n  const close = () => {\n    setIsVisibleDetails(false);\n  };\n\n  const basicData = {\n    labels: Array.from({\n      length: 10\n    }, () => new Date(new Date(2020, 0, 1).getTime() + Math.random() * (new Date(2021, 0, 1).getTime() - new Date(2020, 0, 1).getTime()))),\n    datasets: [{\n      label: selectedPerson.name,\n      backgroundColor: '#42A5F5',\n      data: Array.from({\n        length: 1000\n      }, () => Math.floor(Math.random() * 100))\n    }]\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    visible: isVisibleDetails,\n    modal: true,\n    style: {\n      width: \"620px\"\n    },\n    contentStyle: {\n      overflow: \"visible\"\n    },\n    header: `${selectedPerson.name}  ${selectedPerson.age} ${selectedPerson.personTypeId}`,\n    onHide: () => close(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Chart, {\n    type: \"bar\",\n    data: basicData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default PersonDetail;","map":{"version":3,"sources":["D:/SmartTest/FrontSmart/smartgrid-test/src/components/PersonDetail.jsx"],"names":["React","Dialog","Chart","PersonDetail","props","isVisibleDetails","setIsVisibleDetails","selectedPerson","close","basicData","labels","Array","from","length","Date","getTime","Math","random","datasets","label","name","backgroundColor","data","floor","width","overflow","age","personTypeId"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,KAAT,QAAsB,kBAAtB;;AAGA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAE5B,QAAM;AAAEC,IAAAA,gBAAF;AAAoBC,IAAAA,mBAApB;AAAyCC,IAAAA;AAAzC,MAA4DH,KAAlE;;AAGA,QAAMI,KAAK,GAAG,MAAM;AAChBF,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACH,GAFD;;AAIA,QAAMG,SAAS,GAAG;AACdC,IAAAA,MAAM,EAACC,KAAK,CAACC,IAAN,CAAW;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAX,EAA2B,MAAM,IAAIC,IAAJ,CAAS,IAAIA,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,EAAqBC,OAArB,KAAiCC,IAAI,CAACC,MAAL,MAAiB,IAAIH,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,EAAqBC,OAArB,KAAiC,IAAID,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,EAAqBC,OAArB,EAAlD,CAA1C,CAAjC,CADO;AAEdG,IAAAA,QAAQ,EAAE,CACN;AACIC,MAAAA,KAAK,EAAEZ,cAAc,CAACa,IAD1B;AAEIC,MAAAA,eAAe,EAAE,SAFrB;AAGIC,MAAAA,IAAI,EAAEX,KAAK,CAACC,IAAN,CAAW;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAX,EAA6B,MAAMG,IAAI,CAACO,KAAL,CAAWP,IAAI,CAACC,MAAL,KAAgB,GAA3B,CAAnC;AAHV,KADM;AAFI,GAAlB;AAWA,sBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAEZ,gBADb;AAEI,IAAA,KAAK,EAAE,IAFX;AAGI,IAAA,KAAK,EAAE;AAAEmB,MAAAA,KAAK,EAAE;AAAT,KAHX;AAII,IAAA,YAAY,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAJlB;AAKI,IAAA,MAAM,EAAG,GAAElB,cAAc,CAACa,IAAK,KAAIb,cAAc,CAACmB,GAAI,IAAGnB,cAAc,CAACoB,YAAa,EALzF;AAMI,IAAA,MAAM,EAAE,MAAMnB,KAAK,EANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,KAAZ;AAAkB,IAAA,IAAI,EAAEC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADJ,CAFJ;AAeH,CAnCD;;AAqCA,eAAeN,YAAf","sourcesContent":["import React from 'react';\r\nimport { Dialog } from \"primereact/dialog\";\r\nimport { Chart } from 'primereact/chart';\r\n\r\n\r\nconst PersonDetail = (props) => {\r\n\r\n    const { isVisibleDetails, setIsVisibleDetails, selectedPerson } = props;\r\n\r\n\r\n    const close = () => {\r\n        setIsVisibleDetails(false);\r\n    };\r\n\r\n    const basicData = {\r\n        labels:Array.from({ length: 10 }, () => new Date(new Date(2020, 0, 1).getTime() + Math.random() * (new Date(2021, 0, 1).getTime() - new Date(2020, 0, 1).getTime()))),\r\n        datasets: [\r\n            {\r\n                label: selectedPerson.name,\r\n                backgroundColor: '#42A5F5',\r\n                data: Array.from({ length: 1000 }, () => Math.floor(Math.random() * 100))\r\n            }\r\n        ]\r\n    };\r\n\r\n    return (\r\n\r\n        <div>\r\n            <Dialog\r\n                visible={isVisibleDetails}\r\n                modal={true}\r\n                style={{ width: \"620px\" }}\r\n                contentStyle={{ overflow: \"visible\" }}\r\n                header={`${selectedPerson.name}  ${selectedPerson.age} ${selectedPerson.personTypeId}`}\r\n                onHide={() => close()}\r\n            >\r\n                <Chart type=\"bar\" data={basicData} />\r\n            </Dialog>\r\n\r\n        </div>);\r\n}\r\n\r\nexport default PersonDetail;"]},"metadata":{},"sourceType":"module"}
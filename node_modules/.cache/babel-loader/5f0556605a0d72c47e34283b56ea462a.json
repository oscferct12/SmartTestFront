{"ast":null,"code":"var _jsxFileName = \"D:\\\\SmartTest\\\\FrontSmart\\\\smartgrid-test\\\\src\\\\components\\\\PersonList.jsx\";\nimport React, { useContext, useState, useMemo } from 'react';\nimport { Panel } from 'primereact/panel';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport { Button } from 'primereact/button';\nimport { PersonContext } from \"../contexts/PersonContext\";\nimport PersonForm from './PersonForm';\nimport PersonDetail from './PersonDetail';\n\nconst PersonList = () => {\n  const initialPersonState = {\n    id: null,\n    name: \"\",\n    age: 0,\n    personTypeId: 0\n  };\n  const {\n    persons,\n    findPerson,\n    personTypes,\n    deletePerson,\n    editPerson\n  } = useContext(PersonContext);\n  const [isVisible, setIsVisible] = useState(false);\n  const [isVisibleDetails, setIsVisibleDetails] = useState(false);\n  const [selectedPerson, setSelectedPerson] = useState(initialPersonState);\n\n  const savePerson = id => {\n    findPerson(id);\n    setIsVisible(true);\n  };\n\n  const _deletePerson = id => {\n    setIsVisible(false);\n    deletePerson(id);\n    setIsVisible(null);\n  };\n\n  const footer = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-clearfix\",\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      float: \"left\"\n    },\n    icon: \"pi pi-plus\",\n    label: \"Add New Person\",\n    onClick: () => setIsVisible(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }));\n\n  const showDetails = person => {\n    setSelectedPerson(person);\n    setIsVisibleDetails(true);\n  };\n\n  const actionsTemplate = rowdata => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n      icon: \"pi pi-pencil\",\n      className: \"p-button-rounded p-button-primary p-mr-2\",\n      onClick: () => savePerson(rowdata.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      icon: \"pi pi-trash\",\n      className: \"p-button-rounded p-button-danger\",\n      onClick: () => _deletePerson(rowdata.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }), rowdata.personTypeId === \"Teacher\" ? /*#__PURE__*/React.createElement(Button, {\n      icon: \"pi pi-chart-bar\",\n      className: \"p-button-rounded p-button-submit\",\n      onClick: () => showDetails(rowdata),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 55\n      }\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 173\n      }\n    }));\n  };\n\n  const personstable = useMemo(() => {\n    let personarray = [];\n\n    if (personTypes && personTypes.length > 0 && persons) {\n      personarray = persons.map(item => {\n        return { ...item,\n          personTypeId: personTypes.find(x => x.id === item.personTypeId).description\n        };\n      });\n    }\n\n    return personarray;\n  }, [persons, personTypes]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Panel, {\n    header: \"Person List\",\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, !personstable ? /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 34\n    }\n  }, \"Loading...\") : /*#__PURE__*/React.createElement(DataTable, {\n    value: personstable,\n    selectionMode: \"single\",\n    footer: footer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Column, {\n    field: \"id\",\n    header: \"Id\",\n    sortable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    field: \"name\",\n    header: \"Name\",\n    sortable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    field: \"age\",\n    header: \"Age\",\n    sortable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    field: \"personTypeId\",\n    header: \"Person Type\",\n    sortable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    body: actionsTemplate,\n    header: \"Actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(PersonForm, {\n    isVisible: isVisible,\n    setIsVisible: setIsVisible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(PersonDetail, {\n    isVisibleDetails: isVisibleDetails,\n    setIsVisibleDetails: setIsVisibleDetails,\n    selectedPerson: selectedPerson,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default PersonList;","map":{"version":3,"sources":["D:/SmartTest/FrontSmart/smartgrid-test/src/components/PersonList.jsx"],"names":["React","useContext","useState","useMemo","Panel","DataTable","Column","Button","PersonContext","PersonForm","PersonDetail","PersonList","initialPersonState","id","name","age","personTypeId","persons","findPerson","personTypes","deletePerson","editPerson","isVisible","setIsVisible","isVisibleDetails","setIsVisibleDetails","selectedPerson","setSelectedPerson","savePerson","_deletePerson","footer","width","float","showDetails","person","actionsTemplate","rowdata","personstable","personarray","length","map","item","find","x","description","textAlign"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useMemo } from 'react';\r\nimport { Panel } from 'primereact/panel';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { Button } from 'primereact/button';\r\nimport { PersonContext } from \"../contexts/PersonContext\";\r\nimport PersonForm from './PersonForm';\r\nimport PersonDetail from './PersonDetail';\r\n\r\n\r\n\r\nconst PersonList = () => {\r\n\r\n    const initialPersonState = {\r\n        id: null,\r\n        name: \"\",\r\n        age: 0,\r\n        personTypeId: 0\r\n    };\r\n\r\n    const { persons, findPerson, personTypes, deletePerson, editPerson } = useContext(PersonContext);\r\n    const [isVisible, setIsVisible] = useState(false);\r\n    const [isVisibleDetails, setIsVisibleDetails] = useState(false);\r\n    const [selectedPerson, setSelectedPerson] = useState(initialPersonState);\r\n\r\n    const savePerson = (id) => {\r\n        findPerson(id);\r\n        setIsVisible(true);\r\n    };\r\n\r\n    const _deletePerson = (id) => {\r\n        setIsVisible(false);        \r\n        deletePerson(id);\r\n        setIsVisible(null); \r\n    };\r\n\r\n    const footer = (\r\n        <div className=\"p-clearfix\" style={{ width: \"100%\" }}>\r\n            <Button style={{ float: \"left\" }}\r\n                icon=\"pi pi-plus\"\r\n                label=\"Add New Person\"\r\n                onClick={() => setIsVisible(true)}\r\n            ></Button>\r\n        </div>\r\n    );\r\n\r\n    const showDetails = (person) => {\r\n        setSelectedPerson(person)   \r\n        setIsVisibleDetails(true);     \r\n    };\r\n\r\n    const actionsTemplate = (rowdata) => {\r\n        \r\n        return (\r\n            <>\r\n                <Button icon=\"pi pi-pencil\" className=\"p-button-rounded p-button-primary p-mr-2\" onClick={() => savePerson(rowdata.id)} />\r\n                <Button icon=\"pi pi-trash\" className=\"p-button-rounded p-button-danger\" onClick={() => _deletePerson(rowdata.id)} />\r\n                {rowdata.personTypeId === \"Teacher\" ? <Button icon=\"pi pi-chart-bar\" className=\"p-button-rounded p-button-submit\" onClick={() => showDetails(rowdata)} /> : <div>\r\n                </div>}\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n    const personstable = useMemo(() => {\r\n        let personarray = []\r\n        if (personTypes && personTypes.length > 0 && persons) {\r\n            personarray = persons.map(item => {\r\n                return ({\r\n                    ...item,\r\n                    personTypeId: personTypes.find(x => x.id === item.personTypeId).description\r\n                }\r\n                )\r\n            });\r\n        }\r\n        return personarray;\r\n    }, [persons, personTypes]);\r\n    return (\r\n\r\n        <div>\r\n            <Panel header=\"Person List\" style={{ textAlign: \"center\" }}>\r\n                {!personstable ? <h2>Loading...</h2>\r\n                    : (\r\n                        <DataTable\r\n                            value={personstable}\r\n                            selectionMode=\"single\"\r\n                            footer={footer}>\r\n\r\n                            <Column field=\"id\" header=\"Id\" sortable></Column>\r\n                            <Column field=\"name\" header=\"Name\" sortable></Column>\r\n                            <Column field=\"age\" header=\"Age\" sortable></Column>\r\n                            <Column field={\"personTypeId\"} header=\"Person Type\" sortable></Column>\r\n                            <Column body={actionsTemplate} header=\"Actions\" />\r\n                        </DataTable>\r\n                    )\r\n                }\r\n            </Panel>\r\n            <PersonForm isVisible={isVisible} setIsVisible={setIsVisible}></PersonForm>\r\n            <PersonDetail isVisibleDetails={isVisibleDetails} setIsVisibleDetails={setIsVisibleDetails} selectedPerson={selectedPerson}></PersonDetail>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default PersonList;"]},"metadata":{},"sourceType":"module"}